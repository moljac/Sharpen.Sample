<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns="http://tempuri.org/XMLSchema.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://tempuri.org/XMLSchema.xsd" elementFormDefault="qualified">
	<xs:annotation>
		<xs:documentation>Title: xes (XML Encoded Source)
		Copyright (c) 2004 Martin John Baker
		This program is free software; you can redistribute it and/or
		modify it under the terms of the GNU General Public License
		as published by the Free Software Foundation; either version 2
		of the License, or (at your option) any later version.
		This program is distributed in the hope that it will be useful,
		but WITHOUT ANY WARRANTY; without even the implied warranty of
		MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
		GNU General Public License for more details.
		For information about the GNU General Public License see http://www.gnu.org/
		To discuss this program http://sourceforge.net/forum/forum.php?forum_id=389154
		also see website http://www.euclideanspace.com/software/language/xes/
		</xs:documentation>
	</xs:annotation>
	<xs:element name="package">
		<xs:complexType>
			<xs:choice maxOccurs="unbounded">
				<xs:element name="classDef" type="classDefType"/>
				<xs:element name="importList">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="import" minOccurs="0" maxOccurs="unbounded">
								<xs:complexType>
									<xs:attribute name="name" type="xs:string" form="unqualified"/>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="classDefType">
		<xs:sequence>
			<xs:element name="method" type="methodType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="classDef" type="classDefType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="variable" type="variableType"/>
			<xs:element name="tags" type="tagList"/>
			<xs:element name="meta" type="xs:string"/>
			<xs:element name="comment" type="commentType"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string"/>
		<xs:attribute name="implements" type="xs:string"/>
		<xs:attribute name="extends" type="xs:string"/>
		<xs:attribute name="public" type="xs:boolean"/>
		<xs:attribute name="private" type="xs:boolean"/>
		<xs:attribute name="protected" type="xs:boolean"/>
		<xs:attribute name="static" type="xs:boolean"/>
		<xs:attribute name="abstract" type="xs:boolean"/>
		<xs:attribute name="interface" type="xs:boolean"/>
	</xs:complexType>
	<xs:complexType name="methodType">
		<xs:sequence>
			<xs:element name="parameterList" type="parameterListType"/>
			<xs:element name="tags" type="tagList"/>
			<xs:element name="meta" type="xs:string"/>
			<xs:element name="variable" type="variableType"/>
			<xs:element name="call" type="callType"/>
			<xs:element name="comment" type="commentType"/>
			<xs:element name="if" type="ifType"/>
			<xs:element name="loop" type="loopType"/>
			<xs:element name="switch" type="switchType"/>
			<xs:element name="try" type="tryType"/>
			<xs:element name="break" type="breakType"/>
			<xs:element name="return" type="returnType"/>
			<xs:element name="block" type="blockType"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string"/>
		<xs:attribute name="type" type="xs:string"/>
		<xs:attribute name="public" type="xs:boolean"/>
		<xs:attribute name="private" type="xs:boolean"/>
		<xs:attribute name="protected" type="xs:boolean"/>
		<xs:attribute name="static" type="xs:boolean"/>
		<xs:attribute name="abstract" type="xs:boolean"/>
		<xs:attribute name="native" type="xs:boolean"/>
		<xs:attribute name="synchonised" type="xs:boolean"/>
		<xs:attribute name="final" type="xs:boolean"/>
	</xs:complexType>
	<xs:complexType name="parameterListType">
		<xs:sequence>
			<xs:element name="comment" type="commentType"/>
			<xs:element name="parameter" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="comment" type="commentType"/>
					</xs:sequence>
					<xs:attribute name="name" type="xs:string"/>
					<xs:attribute name="type" type="xs:string"/>
					<xs:attribute name="tagType" type="xs:string"/>
					<xs:attribute name="tagValue" type="xs:string"/>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="loopType">
		<xs:sequence>
			<xs:element name="preCondition" type="booleanExpressionType"/>
			<xs:element name="postCondition" type="booleanExpressionType"/>
			<xs:element name="initialiser" type="blockType"/>
			<xs:element name="step" type="blockType"/>
			<xs:element name="block" type="blockType"/>
		</xs:sequence>
		<xs:attribute name="code" type="loopSubType"/>
	</xs:complexType>
	<xs:simpleType name="loopSubType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="for"/>
			<xs:enumeration value="do"/>
			<xs:enumeration value="while"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="returnType">
		<xs:sequence>
			<xs:element name="variable" type="variableType"/>
			<xs:element name="constant" type="constantType"/>
			<xs:element name="call" type="callType"/>
			<xs:element name="binaryOp" type="binaryOpType"/>
			<xs:element name="unaryOp" type="unaryOpType"/>
			<xs:element name="comment" type="commentType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="blockType">
		<xs:sequence minOccurs="2" maxOccurs="unbounded">
			<xs:element name="assign" type="assignType"/>
			<xs:element name="call" type="callType"/>
			<xs:element name="comment" type="commentType"/>
			<xs:element name="if" type="ifType"/>
			<xs:element name="loop" type="loopType"/>
			<xs:element name="switch" type="switchType"/>
			<xs:element name="try" type="tryType"/>
			<xs:element name="break" type="breakType"/>
			<xs:element name="return" type="returnType"/>
			<xs:element name="block" type="blockType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="binaryOpType">
		<xs:sequence minOccurs="2" maxOccurs="unbounded">
			<xs:element name="variable" type="variableType"/>
			<xs:element name="array" type="arrayType"/>
			<xs:element name="constant" type="constantType"/>
			<xs:element name="call" type="callType"/>
			<xs:element name="binaryOp" type="binaryOpType"/>
			<xs:element name="unaryOp" type="unaryOpType"/>
			<xs:element name="comment" type="commentType"/>
		</xs:sequence>
		<xs:attribute name="operator" type="operatorType"/>
	</xs:complexType>
	<xs:simpleType name="operatorType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="||"/>
			<xs:enumeration value="&amp;&amp;"/>
			<xs:enumeration value="|"/>
			<xs:enumeration value="^"/>
			<xs:enumeration value="&amp;"/>
			<xs:enumeration value="=="/>
			<xs:enumeration value="!="/>
			<xs:enumeration value="&lt;"/>
			<xs:enumeration value="&gt;"/>
			<xs:enumeration value="&lt;="/>
			<xs:enumeration value="&gt;="/>
			<xs:enumeration value="&lt;&lt;"/>
			<xs:enumeration value="&gt;&gt;"/>
			<xs:enumeration value="&gt;&gt;&gt;"/>
			<xs:enumeration value="+"/>
			<xs:enumeration value="-"/>
			<xs:enumeration value="*"/>
			<xs:enumeration value="/"/>
			<xs:enumeration value="%"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="constantType">
		<xs:attribute name="intConst" type="xs:int"/>
		<xs:attribute name="stringValue" type="xs:string"/>
		<xs:attribute name="floatValue" type="xs:float"/>
		<xs:attribute name="doubleValue" type="xs:double"/>
		<xs:attribute name="booleanValue" type="xs:boolean"/>
	</xs:complexType>
	<xs:simpleType name="primativeType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="boolean"/>
			<xs:enumeration value="byte"/>
			<xs:enumeration value="char"/>
			<xs:enumeration value="double"/>
			<xs:enumeration value="float"/>
			<xs:enumeration value="short"/>
			<xs:enumeration value="int"/>
			<xs:enumeration value="long"/>
			<xs:enumeration value="void"/>
			<xs:enumeration value="String"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="dataType">
		<xs:sequence>
			<xs:element name="primative" type="primativeType"/>
		</xs:sequence>
		<xs:attribute name="className" type="xs:string"/>
		<xs:attribute name="array" type="xs:boolean"/>
	</xs:complexType>
	<xs:complexType name="ifType">
		<xs:sequence>
			<xs:element name="condition" type="booleanExpressionType"/>
			<xs:element name="block" type="blockType"/>
			<xs:element name="elseBlock" type="blockType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="booleanExpressionType">
		<xs:sequence>
			<xs:element name="constant" type="constantType"/>
			<xs:element name="call" type="callType"/>
			<xs:element name="binaryOp" type="binaryOpType"/>
			<xs:element name="unaryOp" type="unaryOpType"/>
			<xs:element name="comment" type="commentType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="switchType">
		<xs:sequence>
			<xs:element name="variable" type="variableType"/>
			<xs:element name="case" type="caseType"/>
			<xs:element name="default" type="caseType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="caseType">
		<xs:sequence>
			<xs:element name="constant" type="constantType"/>
			<xs:element name="block" type="blockType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="tryType">
		<xs:sequence>
			<xs:element name="block" type="blockType"/>
			<xs:element name="catchBlock" type="catchBlockType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="catchBlockType">
		<xs:sequence>
			<xs:element name="block" type="blockType"/>
			<xs:element name="exception" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="breakType">
		<xs:sequence>
			<xs:element name="comment" type="commentType"/>
		</xs:sequence>
		<xs:attribute name="type" type="breakSubType"/>
	</xs:complexType>
	<xs:simpleType name="breakSubType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="break"/>
			<xs:enumeration value="continue"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="variableType">
		<xs:sequence>
			<xs:element name="comment" type="commentType"/>
			<xs:element name="assign" type="assignType"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string"/>
		<xs:attribute name="type" type="xs:string"/>
		<xs:attribute name="public" type="xs:boolean"/>
		<xs:attribute name="private" type="xs:boolean"/>
		<xs:attribute name="protected" type="xs:boolean"/>
		<xs:attribute name="static" type="xs:boolean"/>
		<xs:attribute name="primative" type="xs:boolean"/>
		<xs:attribute name="array" type="xs:boolean"/>
	</xs:complexType>
	<xs:complexType name="assignType">
		<xs:sequence maxOccurs="unbounded">
			<xs:element name="variable" type="variableType"/>
			<xs:element name="array" type="arrayType"/>
			<xs:element name="constant" type="constantType"/>
			<xs:element name="call" type="callType"/>
			<xs:element name="binaryOp" type="binaryOpType"/>
			<xs:element name="unaryOp" type="unaryOpType"/>
			<xs:element name="comment" type="commentType"/>
		</xs:sequence>
		<xs:attribute name="operator" type="assignOperatorType"/>
	</xs:complexType>
	<xs:simpleType name="assignOperatorType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="="/>
			<xs:enumeration value="+="/>
			<xs:enumeration value="-="/>
			<xs:enumeration value="*="/>
			<xs:enumeration value="/="/>
			<xs:enumeration value="amp="/>
			<xs:enumeration value="|="/>
			<xs:enumeration value="^="/>
			<xs:enumeration value="%="/>
			<xs:enumeration value="left="/>
			<xs:enumeration value="&gt;&gt;="/>
			<xs:enumeration value="&gt;&gt;&gt;="/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="unaryOpType">
		<xs:sequence maxOccurs="unbounded">
			<xs:element name="variable" type="variableType"/>
			<xs:element name="array" type="arrayType"/>
			<xs:element name="constant" type="constantType"/>
			<xs:element name="call" type="callType"/>
			<xs:element name="binaryOp" type="binaryOpType"/>
			<xs:element name="unaryOp" type="unaryOpType"/>
			<xs:element name="comment" type="commentType"/>
		</xs:sequence>
		<xs:attribute name="type" type="xs:string"/>
		<xs:attribute name="operator" type="unaryOperatorType"/>
	</xs:complexType>
	<xs:simpleType name="unaryOperatorType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="++"/>
			<xs:enumeration value="--"/>
			<xs:enumeration value="pre++"/>
			<xs:enumeration value="pre--"/>
			<xs:enumeration value="!"/>
			<xs:enumeration value="~"/>
			<xs:enumeration value="+"/>
			<xs:enumeration value="-"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="callType">
		<xs:sequence>
			<xs:element name="comment" type="commentType"/>
			<xs:element name="parameterValueList" type="parameterValueListType"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string"/>
		<xs:attribute name="isNew" type="xs:boolean"/>
	</xs:complexType>
	<xs:complexType name="parameterValueListType">
		<xs:sequence>
			<xs:element name="comment" type="commentType"/>
			<xs:element name="parameterValue" type="parameterValueType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="parameterValueType">
		<xs:sequence>
			<xs:element name="variable" type="variableType"/>
			<xs:element name="constant" type="constantType"/>
			<xs:element name="call" type="callType"/>
			<xs:element name="binaryOp" type="binaryOpType"/>
			<xs:element name="unaryOp" type="unaryOpType"/>
			<xs:element name="comment" type="commentType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="castType">
		<xs:sequence>
			<xs:element name="dataType" type="dataType"/>
			<xs:element name="variable" type="variableType"/>
			<xs:element name="constant" type="constantType"/>
			<xs:element name="call" type="callType"/>
			<xs:element name="binaryOp" type="binaryOpType"/>
			<xs:element name="unaryOp" type="unaryOpType"/>
			<xs:element name="comment" type="commentType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="arrayType">
		<xs:sequence>
			<xs:element name="dataType" type="dataType"/>
		</xs:sequence>
		<xs:attribute name="size" type="xs:int"/>
	</xs:complexType>
	<xs:complexType name="tagType">
		<xs:sequence>
			<xs:element name="tagValue" type="xs:string"/>
		</xs:sequence>
		<xs:attribute name="tagType" type="xs:string"/>
	</xs:complexType>
	<xs:complexType name="tagList">
		<xs:sequence>
			<xs:element name="tag" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="commentType" mixed="true">
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:any processContents="lax"/>
		</xs:sequence>
		<xs:anyAttribute namespace="##other" processContents="lax"/>
	</xs:complexType>
</xs:schema>
